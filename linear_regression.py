# -*- coding: utf-8 -*-
"""linear_regression

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wIPR0L1WjxEi9tcAIdFIyLmgD_gRLbBr
"""

from google.colab import files


uploaded = files.upload()

import pandas as pd
import io
a = pd.read_csv(io.BytesIO(uploaded['appliance_energy.csv']))
print(a)

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
df=pd.read_csv('appliance_energy.csv')
print(df.head())

import seaborn as sns
plt.scatter(df['Temperature (°C)'],df['Energy Consumption (kWh)'])
plt.show()

print(df.isnull().sum())

#Features (independent variable) and target (deoendent variable)
#independent variable (Temperature)
X=df['Temperature (°C)']
#dependent variable (Energy Consumption)
Y=df['Energy Consumption (kWh)']

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

#create a linear regression model
model = LinearRegression()
#Train the model
model.fit(X_train.values.reshape(-1, 1), Y_train)

print("Slope: ", model.coef_)
print("y-Intercept: ", model.intercept_)

#y=mx+c
print(model.coef_*28.25+model.intercept_)

print(model.coef_*28.25 + model.intercept_)

y_pred=model.predict(X_test.values.reshape(-1,1))

y_pred

import joblib
#Save the model to a file
joblib.dump(model, 'energy_consumption_model.pkl')

import joblib
#Save the model to a file
joblib.dump(model, 'energy_consumption_model.pkl')

#plot the test data and regression  line
plt.scatter(X_test,Y_test,color='red')
plt.plot(X_test,y_pred,color='blue')
plt.xlabel('Temperature (°C)')
plt.ylabel('Energy Consumption (kWh)')

new_data = np.array([[22.49]])

# Make predictions
predictions = model.predict(new_data)

# Print the predictions
print(predictions)