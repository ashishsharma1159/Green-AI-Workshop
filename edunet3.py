# -*- coding: utf-8 -*-
"""Edunet3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18p0rTJzGn1WcxGexdy5x750obyRom4R9
"""

import matplotlib.pyplot as plt
months = ['jan', 'Feb','Mar','Apr','May','Jun']
energy_consumption = [1200,1300,1100,1500,1400,1600]
plt.plot(months,energy_consumption, marker='o',color='b', linestyle='--')
#plt.bar(energy_consumption,height=10,color='green')
#plt.pie(energy_consumption, labels=months, autopct='%1.1f%%', colors=plt.cm.Blues([0, 0.5, 1]))
#plt.scatter(energy_consumption, months, color='red')
plt.title('Energy Consumption Over 6 Months')
plt.xlabel('Months')
plt.ylabel('Energy Consumption (MWh)')
plt.show()

import matplotlib.pyplot as plt
import numpy as np
data = np.random.normal(170,10,250)
plt.hist(data,bins=30)
plt.show();

import numpy as np

import matplotlib.pyplot as plt

#Y-axis values

y1= [2, 3, 4.5]
y2= [1, 1.5, 5]

plt.plot(y1)
plt.plot(y2)
plt.legend(["blue", "green"], loc ="lower right")

plt.show()

import seaborn as sns
import pandas as pd
import matplotlib.pyplot as plt
data = {
    "Solar": [1200,1500,1300],
    "Wind": [3400,3600,3200],
    "Hydropower": [2900,3100,2800],
    "Biomass": [2500,2700,2400]
}
df = pd.DataFrame(data)
# Create a pair plot
sns.pairplot(df)
plt.show()

correlation_matrix = df.corr()
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', linewidth=0.5)
plt.title('Correlation Between Energy Sources')
plt.show()

sns.boxplot(data=df)
plt.title('Distribution of Energy Consumption by Source')
plt.show()

sns.violinplot(data=df)
plt.title('Violin Plot of Energy Consumption Distributions')
plt.show()

energy_values = [100,200,300,400,500]
carbon_emissions=[10,20,25,40,50]
df_reg=pd.DataFrame({
    'Energy Consumption': energy_values,
    'Carbon Emissions': carbon_emissions
})
sns.regplot(x='Energy Consumption', y='Carbon Emissions', data=df_reg)

from mpl_toolkits import mplot3d
import numpy as np
fig=plt.figure()
ax=plt.axes(projection='3d')
z=np.linspace(0,1,1000)
x=z*np.sin(25*z)
y=z*np.cos(25*z)
ax.plot3D(x,y,z,'green')
ax.set_title('3D line plot')
plt.show()









